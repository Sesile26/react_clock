{"version":3,"sources":["components/Clock/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","date","Date","timerId","undefined","newDate","setState","console","log","toLocaleTimeString","this","setInterval","prevProps","name","props","clearInterval","React","Component","App","isClockVisible","showClock","hideClock","getRandomName","Math","floor","random","className","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"sNAWaA,EAAb,4MACEC,MAAQ,CACNC,KAAM,IAAIC,KACVC,aAASC,GAHb,EAuBEC,QAAU,WACR,EAAKC,SAAS,CAAEL,KAAM,IAAIC,OAE1BK,QAAQC,IAAI,EAAKR,MAAMC,KAAKQ,uBA1BhC,uDAME,WACEC,KAAKJ,SAAS,CAAEH,QAASQ,YAAYD,KAAKL,QAAS,SAPvD,gCAUE,SAAmBO,GACbA,EAAUC,OAASH,KAAKI,MAAMD,MAEhCN,QAAQC,IAAR,qCAA0CI,EAAUC,KAApD,eAA+DH,KAAKI,MAAMD,SAbhF,kCAiBE,WACMH,KAAKV,MAAMG,SACbY,cAAcL,KAAKV,MAAMG,WAnB/B,oBA6BE,WACE,OACE,mCACGO,KAAKV,MAAMC,KAAKQ,2BAhCzB,GAA2BO,IAAMC,WCF3BC,E,4MACJlB,MAAe,CACbmB,gBAAgB,EAChBN,KAAM,G,EAGRO,UAAY,WACV,EAAKd,SAAS,CAAEa,gBAAgB,K,EAGlCE,UAAY,WACV,EAAKf,SAAS,CAAEa,gBAAgB,K,EAGlCG,cAAgB,WACd,EAAKhB,SAAS,CAAEO,KAAMU,KAAKC,MAAsB,IAAhBD,KAAKE,a,4CAGxC,WACE,OACE,sBAAKC,UAAU,MAAf,UACE,6CACA,sCAEGhB,KAAKV,MAAMa,QAEd,8CAEG,IACAH,KAAKV,MAAMmB,gBAAkB,cAAC,EAAD,CAAON,KAAMH,KAAKV,MAAMa,UAGxD,wBACEc,KAAK,SACLC,QAASlB,KAAKU,UAFhB,kBAOA,wBACEO,KAAK,SACLC,QAASlB,KAAKW,UAFhB,kBAOA,wBACEM,KAAK,SACLC,QAASlB,KAAKY,cAFhB,oC,GA9CUN,IAAMC,WAyDTC,IC/DfW,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.9425a9da.chunk.js","sourcesContent":["import React from 'react';\n\nexport type Props = {\n  name: number;\n};\n\nexport type State1 = {\n  date: Date;\n  timerId?: NodeJS.Timer;\n};\n\nexport class Clock extends React.Component<Props, State1> {\n  state = {\n    date: new Date(),\n    timerId: undefined,\n  };\n\n  componentDidMount() {\n    this.setState({ timerId: setInterval(this.newDate, 1000) });\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.name !== this.props.name) {\n      // eslint-disable-next-line\n      console.log(`The Clock was renamed from ${prevProps.name} to ${this.props.name}`);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.state.timerId) {\n      clearInterval(this.state.timerId);\n    }\n  }\n\n  newDate = () => {\n    this.setState({ date: new Date() });\n    // eslint-disable-next-line\n    console.log(this.state.date.toLocaleTimeString());\n  };\n\n  render() {\n    return (\n      <>\n        {this.state.date.toLocaleTimeString()}\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Clock } from './components/Clock/Clock';\n\ntype State = {\n  isClockVisible: boolean;\n  name: number;\n};\n\nclass App extends React.Component {\n  state: State = {\n    isClockVisible: true,\n    name: 0,\n  };\n\n  showClock = () => {\n    this.setState({ isClockVisible: true });\n  };\n\n  hideClock = () => {\n    this.setState({ isClockVisible: false });\n  };\n\n  getRandomName = () => {\n    this.setState({ name: Math.floor(Math.random() * 100) });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>React Clock</h1>\n        <p>\n          Name:\n          {this.state.name}\n        </p>\n        <p>\n          Current time:\n          {' '}\n          {this.state.isClockVisible && <Clock name={this.state.name} />}\n        </p>\n\n        <button\n          type=\"button\"\n          onClick={this.showClock}\n        >\n          Show\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={this.hideClock}\n        >\n          Hide\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={this.getRandomName}\n        >\n          Set Random Name\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}